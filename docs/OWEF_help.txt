Command options format: 
./OWEFexec [--count -i sequence_file -l word_length -ml minimum_length -ms minimum_sequences -mo minimum_occurrences <-a> <-n> <-m> <-e> <-rs>] [--score -o markov_order <-r> <-p>] [--cluster -s #_of_clusters -c sort_column -t cluster_type -d distance -sm] [--scatter] [--distribution <-dc number> <-dn>] [--cooccurrence <-cm map_name> <-cd dist_name> <-cn number> <-cc> <-cs>] [--prefix JobID]

Counting stage options:

  Required:
    --count : perform the counting stage
	-i filename (-i indicates input file, filename is the name of the file on your system)
	-l wordlength (-l indicates maximum word length, wordlength is an integer)

  Optional:
	-ml mimimum_length (-ml indicates the minimum wordlength (range), minimum_length is an integer)
	-ms minimum_sequences (-ms indicates minimum number of sequences, minimum_sequences is an integer)
	-mo minimum_occurrences (-mo indicates minimum_number of occurrences, minimum_occurrences is an integer)
	-a (-a indicates that the input is marked for ancestral repeats and should be filtered accordingly)
	-n (-n indicates that arbitrary nucleotides be filtered from the input)
	-m (-m causes the framework to list out words NOT found in the input file)
	-e (-e fully enumerates any missing word listed)
 -rs (-rs record the set of sequences a word occurrs in)

Scoring stage options:

  Required:
    --score : perform the scoring stage

  Optional:
	-o markov_order (-o indicates the order, markov_order is an integer greater than 0 and less than wordlength)
	-r (-r adds reverse compliment analysis to the stage)
	-p (-p adds p-value analyisis to the stage)
	-pt threshold (-pt limits output from scoring to p-values below a certain cutoff, threshold is a double)

Clustering stage options:

  Required:
    --cluster : perform the clustering stage
	-s #_of_clusters (-s indicates seeds, #_of_clusters is an integer)
	-c sort_column (-c indicates column to sort by, sort_column is a character, r = O/E score, s = S*ln(S/Es), o = O*ln(O/Eo))
	-t cluster_type (-t indicates cluster distance method, cluster_type is a character, e = edit distance, h = hamming distance)
	-d distance (-d indicates maximum distance between two words in a cluster, distance is an integer)
	-sm (-sm add motif scoring and logo creation to the stage)
	-pwm (create Position Weight Matrices for the motifs)
	-logos (create logos for the motifs)
	-regex (create regular expressions for the motifs)

Scatter plot options:

  Required:
    --scatter

Word distribution options:

  Required:
    --distribution

  Optional:
	-dc number (-dc indicates the number of top words used for computing distributions, number is an integer)
	-dn (-dc normalizes the word distributions to a percentage through the sequences)

CoOccurrence options:

  Required:
    --cooccurrence

  Optional:
	-cm map_name (-cm maps the cooccurrence to a plot, map_name is a string for the filename)
	-cd dist_name (-cd creates a file with the distances between groups, dist_name is a string for the filename)
	-cn number (-cn is the number of words in a group, number is an integer)
	-cc (-cc indicates using a word twice in a group (cooccurrence with itself))
	-cs (-cs indicates case sensitivity for distinct words)

Sequence clustering options:

  Required:
    --sequence

Module discovery options:
    --modules
	-mef (-mef uses fixed wordlength, if absent, the wordlength is variable)
	-med dimensions (-med uses dimensions to set the size of the modules created)
	-mes (-mes allows the module to include the same word multiple times)
	-medd (-medd creates a distance distribution file)
	-mepo (-mepo preserves the order of the words in the module when searching)
	-mede (-mede creates a density distribution file)
	-meow (-meow allows words in a module to overlap in position)

General job options:

  Optional:
    --prefix JobID (--prefix places a prefix in front of every file created during the job, JobID is a string)

    --parallel (run the job with parallelizations active)

